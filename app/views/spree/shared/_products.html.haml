- paginated_products = @searcher.retrieve_products if params.key?(:keywords)
- paginated_products ||= products
- content_for :head do
  - if paginated_products.respond_to?(:num_pages)
    = rel_next_prev_link_tags paginated_products
%div{"data-hook" => "products_search_results_heading"}
  - if products.empty?
    %div{"data-hook" => "products_search_results_heading_no_results_found"}
      = Spree.t(:no_products_found)
  - elsif params.key?(:keywords)
    %div{"data-hook" => "products_search_results_heading_results_found"}
      %h6.search-results-title= Spree.t(:search_results, :keywords => h(params[:keywords]))
- if products.any?
  %ul#products.inline.product-listing{"data-hook" => ""}
    - products.each do |product|
      - url = spree.product_path(product, :taxon_id => @taxon.try(:id))
      %li{:class => "columns three #{cycle("alpha", "secondary", "", "omega secondary", :name => "classes")}", "data-hook" => "products_list_item", :id => "product_#{product.id}", :itemscope => "", :itemtype => "http://schema.org/Product"}
        - cache(@taxon.present? ? [I18n.locale, current_currency, @taxon, product] : [I18n.locale, current_currency, product]) do
          .product-image
            = link_to small_image(product, :itemprop => "image"), url, :itemprop => 'url'
          = link_to truncate(product.name, :length => 50), url, :class => 'info', :itemprop => "name", :title => product.name
          %span{:itemprop => "offers", :itemscope => "", :itemtype => "http://schema.org/Offer"}
            %span.price.selling{:itemprop => "price"}
              = display_price(product)
    - reset_cycle("classes")
- if paginated_products.respond_to?(:num_pages)
  = paginate paginated_products
